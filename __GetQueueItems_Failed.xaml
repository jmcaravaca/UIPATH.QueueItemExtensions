<Activity mc:Ignorable="sap sap2010" x:Class="Get_All_Queue_Items" this:Get_All_Queue_Items.TimeoutMS="30000" this:Get_All_Queue_Items.Continue_OnError="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="TimeoutMS" Type="InArgument(x:Int32)" />
    <x:Property Name="QueueName" Type="InArgument(x:String)" />
    <x:Property Name="FolderPath" Type="InArgument(x:String)" />
    <x:Property Name="Duration" Type="InArgument(s:Nullable(x:Int32))" />
    <x:Property Name="Priority" Type="InArgument(x:String)" />
    <x:Property Name="QueueItems" Type="OutArgument(scg:List(ui:QueueItem))" />
    <x:Property Name="FilterTo" Type="InArgument(s:Nullable(s:DateTime))" />
    <x:Property Name="FilterFrom" Type="InArgument(s:Nullable(s:DateTime))" />
    <x:Property Name="FilterStrategy" Type="InArgument(x:String)" />
    <x:Property Name="Reference" Type="InArgument(x:String)" />
    <x:Property Name="FilterTop" Type="InArgument(x:Int32)" />
    <x:Property Name="Continue_OnError" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1087,948</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Get_All_Queue_Items_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="27">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="25">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get_All_Queue_Items" sap:VirtualizedContainerService.HintSize="616,883" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="index" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="qItems" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Initiialize List" sap:VirtualizedContainerService.HintSize="574,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(ui:QueueItem)">[QueueItems]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(ui:QueueItem)">[new List(Of QueueItem)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InterruptibleDoWhile Condition="[qItems.count = 100 Or index*100&lt;FilterTop]" DisplayName="Get All Items" sap:VirtualizedContainerService.HintSize="574,691" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="538,526" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Switch x:TypeArguments="x:String" DisplayName="Switch FIlterSTrategy" Expression="[FilterStrategy]" sap:VirtualizedContainerService.HintSize="496,159" sap2010:WorkflowViewState.IdRef="Switch`1_3">
            <Switch x:TypeArguments="x:String" x:Key="StartsWith" DisplayName="Switch&lt;StringPriority" Expression="[Priority]" sap:VirtualizedContainerService.HintSize="496,499" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <Switch.Default>
                <ui:GetQueueItems Priority="{x:Null}" Top="{x:Null}" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="StartsWith" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_5" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
              </Switch.Default>
              <ui:GetQueueItems Top="{x:Null}" x:Key="High" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="StartsWith" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" Priority="[0]" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
              <ui:GetQueueItems Top="{x:Null}" x:Key="Normal" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="StartsWith" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_3" Priority="[1]" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
              <ui:GetQueueItems Top="{x:Null}" x:Key="Low" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="StartsWith" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_4" Priority="[2]" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
            </Switch>
            <Switch x:TypeArguments="x:String" x:Key="Equals" DisplayName="Switch&lt;String&gt;" Expression="[Priority]" sap:VirtualizedContainerService.HintSize="496,499" sap2010:WorkflowViewState.IdRef="Switch`1_2">
              <Switch.Default>
                <ui:GetQueueItems Priority="{x:Null}" Top="{x:Null}" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="Equals" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_9" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
              </Switch.Default>
              <ui:GetQueueItems Top="{x:Null}" x:Key="High" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="Equals" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_6" Priority="[0]" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
              <ui:GetQueueItems Top="{x:Null}" x:Key="Normal" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="Equals" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_7" Priority="[1]" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
              <ui:GetQueueItems Top="{x:Null}" x:Key="Low" ContinueOnError="[Continue_OnError]" DisplayName="Get Queue Items" Duration="[Duration]" FilterStrategy="Equals" FolderPath="[FolderPath]" From="[FilterFrom]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetQueueItems_8" Priority="[2]" QueueItemStates="Failed" QueueName="[QueueName]" Reference="[Reference]" Result="[qItems]" Skip="[index * 100]" TimeoutMS="[TimeoutMS]" To="[FilterTo]" />
            </Switch>
          </Switch>
          <Assign DisplayName="Increment Index" sap:VirtualizedContainerService.HintSize="496,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
            </Assign.Value>
          </Assign>
          <InvokeMethod DisplayName="Concatenate to output" sap:VirtualizedContainerService.HintSize="496,135" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="AddRange">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="scg:List(ui:QueueItem)">[QueueItems]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="scg:IEnumerable(ui:QueueItem)">[qItems]</InArgument>
          </InvokeMethod>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
    </ui:InterruptibleDoWhile>
  </Sequence>
</Activity>